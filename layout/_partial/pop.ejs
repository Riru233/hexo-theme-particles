<% var current=(page.current-1)*config.index_generator.per_page; var rootlink=config.root; %>
<!-- 搜索遮罩框，作为文件导入* -->
<div id="searchModal" class="modal scrollbar" style="border-radius: 10px;">
    <div class="modal-content">
        <div class="search-header">
            <div class="title">搜索</div>
            <input type="search" id="searchInput" name="s" placeholder="搜索学习笔记、技术交流等内容" class="search-input">
        </div>
        <div id="searchResult"></div>
    </div>
</div>

<!-- 用的同一个架构，懒得改ejs文件名了 -->
<div id="modal1" class="modal">
    <div class="modal-content">
        <div class="title">切换样式</div>
        <p>一个博客，没有一个多彩的主题，大概就没有了生机吧，点击下方按钮切换吧</p>
    </div>
    <div class="modal-footer">
        <a id="themenight" class="modal-close waves-effect waves-white btn-flat"><%= theme.pattern.night %></a>
        <a id="thememaiden" class="modal-close waves-effect waves-white btn-flat"><%= theme.pattern.maiden %></a>
        <a id="themefull" class="modal-close waves-effect waves-white btn-flat"><%= theme.pattern.full %></a>
    </div>
</div>

<script type="text/javascript">
$(function () {
    var searchFunc = function (path, search_id, content_id) {
        'use strict';
        $.ajax({
            url: path,
            dataType: "xml",
            success: function (xmlResponse) {
                //从博客范围中获取数据
                var datas = $("entry", xmlResponse).map(function () {
                    return {
                        title: $("title", this).text(),
                        content: $("content", this).text(),
                        url: $("url", this).text()
                    };
                }).get();
                var $input = document.getElementById(search_id);
                var $resultContent = document.getElementById(content_id);
                $input.addEventListener('input', function () {
                    var str = '<ul class=\"search-result-list\">';
                    var keywords = this.value.trim().toLowerCase().split(/[\s\-]+/);
                    $resultContent.innerHTML = "";
                    if (this.value.trim().length <= 0) {
                        return;
                    }
                    // perform local searching
                    datas.forEach(function (data) {
                        var isMatch = true;
                        var data_title = data.title.trim().toLowerCase();
                        var data_content = data.content.trim().replace(/<[^>]+>/g, "").toLowerCase();
                        var data_url = data.url;
                        data_url = data_url.indexOf('/') === 0 ? data.url : '/' + data_url;
                        var index_title = -1;
                        var index_content = -1;
                        var first_occur = -1;
                        // only match artiles with not empty titles and contents
                        if (data_title !== '' && data_content !== '') {
                            keywords.forEach(function (keyword, i) {
                                index_title = data_title.indexOf(keyword);
                                index_content = data_content.indexOf(keyword);
                                if (index_title < 0 && index_content < 0) {
                                    isMatch = false;
                                } else {
                                    if (index_content < 0) {
                                        index_content = 0;
                                    }
                                    if (i === 0) {
                                        first_occur = index_content;
                                    }
                                }
                            });
                        }
                        // show search results
                        if (isMatch) {
                            str += "<li><a href='" + data_url + "' class='search-result-title'>" + data_title + "</a>";
                            var content = data.content.trim().replace(/<[^>]+>/g, "");
                            if (first_occur >= 0) {
                                // cut out 100 characters
                                var start = first_occur - 20;
                                var end = first_occur + 80;
                                if (start < 0) {
                                    start = 0;
                                }
                                if (start === 0) {
                                    end = 100;
                                }
                                if (end > content.length) {
                                    end = content.length;
                                }
                                var match_content = content.substr(start, end);
                                // highlight all keywords
                                keywords.forEach(function (keyword) {
                                    var regS = new RegExp(keyword, "gi");
                                    match_content = match_content.replace(regS, "<em class=\"search-keyword\">" + keyword + "</em>");
                                });

                                str += "<p class=\"search-result\">" + match_content + "...</p>"
                            }
                            str += "</li>";
                        }
                    });
                    str += "</ul>";
                    $resultContent.innerHTML = str;
                });
            }
        });
    };

    searchFunc('<%- url_for('/search.xml') %>', 'searchInput', 'searchResult');
});
</script>
